{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport initEnvironment from \"./createRelayEnvironment\";\nimport { fetchQuery, ReactRelayContext } from \"react-relay\";\nexport default (function (ComposedComponent) {\n  var _class, _temp;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithData, _React$Component);\n\n    _createClass(WithData, null, [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(ctx) {\n          var composedInitialProps, queryProps, queryRecords, environment, variables;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // Evaluate the composed component's getInitialProps()\n                  composedInitialProps = {};\n\n                  if (!ComposedComponent.getInitialProps) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return ComposedComponent.getInitialProps(ctx);\n\n                case 4:\n                  composedInitialProps = _context.sent;\n\n                case 5:\n                  queryProps = {};\n                  queryRecords = {};\n                  environment = initEnvironment();\n\n                  if (!options.query) {\n                    _context.next = 14;\n                    break;\n                  }\n\n                  variables = composedInitialProps.relayVariables || {}; // TODO: Consider RelayQueryResponseCache\n                  // https://github.com/facebook/relay/issues/1687#issuecomment-302931855\n\n                  _context.next = 12;\n                  return fetchQuery(environment, options.query, variables);\n\n                case 12:\n                  queryProps = _context.sent;\n                  queryRecords = environment.getStore().getSource().toJSON();\n\n                case 14:\n                  return _context.abrupt(\"return\", _objectSpread({}, composedInitialProps, queryProps, {\n                    queryRecords: queryRecords\n                  }));\n\n                case 15:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    function WithData(props) {\n      var _this;\n\n      _classCallCheck(this, WithData);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithData).call(this, props));\n      _this.environment = initEnvironment({\n        records: props.queryRecords\n      });\n      return _this;\n    }\n\n    _createClass(WithData, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ReactRelayContext.Provider, {\n          value: {\n            environment: this.environment,\n            variables: {}\n          }\n        }, React.createElement(ComposedComponent, _extends({}, this.props, {\n          query: this.props\n        })));\n      }\n    }]);\n\n    return WithData;\n  }(React.Component), _defineProperty(_class, \"displayName\", \"WithData(\".concat(ComposedComponent.displayName, \")\")), _temp;\n});","map":{"version":3,"sources":["/Users/rafael/Projetos/bastiani-blog/relay/withData.js"],"names":["React","initEnvironment","fetchQuery","ReactRelayContext","ComposedComponent","options","ctx","composedInitialProps","getInitialProps","queryProps","queryRecords","environment","query","variables","relayVariables","getStore","getSource","toJSON","props","records","Component","displayName"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,aAA9C;AAEA,gBAAe,UAACC,iBAAD,EAAqC;AAAA;;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAClD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAG+BC,GAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAII;AACIC,kBAAAA,oBALR,GAK+B,EAL/B;;AAAA,uBAMQH,iBAAiB,CAACI,eAN1B;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAOmCJ,iBAAiB,CAACI,eAAlB,CAAkCF,GAAlC,CAPnC;;AAAA;AAOMC,kBAAAA,oBAPN;;AAAA;AAUQE,kBAAAA,UAVR,GAUqB,EAVrB;AAWQC,kBAAAA,YAXR,GAWuB,EAXvB;AAYUC,kBAAAA,WAZV,GAYwBV,eAAe,EAZvC;;AAAA,uBAcQI,OAAO,CAACO,KAdhB;AAAA;AAAA;AAAA;;AAeYC,kBAAAA,SAfZ,GAewBN,oBAAoB,CAACO,cAArB,IAAuC,EAf/D,EAgBM;AACA;;AAjBN;AAAA,yBAkByBZ,UAAU,CAACS,WAAD,EAAcN,OAAO,CAACO,KAAtB,EAA6BC,SAA7B,CAlBnC;;AAAA;AAkBMJ,kBAAAA,UAlBN;AAmBMC,kBAAAA,YAAY,GAAGC,WAAW,CACvBI,QADY,GAEZC,SAFY,GAGZC,MAHY,EAAf;;AAnBN;AAAA,qEA0BSV,oBA1BT,EA2BSE,UA3BT;AA4BMC,oBAAAA,YAAY,EAAZA;AA5BN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgCE,sBAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,YAAKP,WAAL,GAAmBV,eAAe,CAAC;AACjCkB,QAAAA,OAAO,EAAED,KAAK,CAACR;AADkB,OAAD,CAAlC;AAFiB;AAKlB;;AArCH;AAAA;AAAA,+BAuCW;AACP,eACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE,KAAKA,WAApB;AAAiCE,YAAAA,SAAS,EAAE;AAA5C;AADT,WAGE,oBAAC,iBAAD,eAAuB,KAAKK,KAA5B;AAAmC,UAAA,KAAK,EAAE,KAAKA;AAA/C,WAHF,CADF;AAOD;AA/CH;;AAAA;AAAA,IAA8BlB,KAAK,CAACoB,SAApC,6DACmChB,iBAAiB,CAACiB,WADrD;AAiDD,CAlDD","sourcesContent":["import React from \"react\";\nimport initEnvironment from \"./createRelayEnvironment\";\nimport { fetchQuery, ReactRelayContext } from \"react-relay\";\n\nexport default (ComposedComponent, options = {}) => {\n  return class WithData extends React.Component {\n    static displayName = `WithData(${ComposedComponent.displayName})`;\n\n    static async getInitialProps(ctx) {\n      // Evaluate the composed component's getInitialProps()\n      let composedInitialProps = {};\n      if (ComposedComponent.getInitialProps) {\n        composedInitialProps = await ComposedComponent.getInitialProps(ctx);\n      }\n\n      let queryProps = {};\n      let queryRecords = {};\n      const environment = initEnvironment();\n\n      if (options.query) {\n        const variables = composedInitialProps.relayVariables || {};\n        // TODO: Consider RelayQueryResponseCache\n        // https://github.com/facebook/relay/issues/1687#issuecomment-302931855\n        queryProps = await fetchQuery(environment, options.query, variables);\n        queryRecords = environment\n          .getStore()\n          .getSource()\n          .toJSON();\n      }\n\n      return {\n        ...composedInitialProps,\n        ...queryProps,\n        queryRecords\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.environment = initEnvironment({\n        records: props.queryRecords\n      });\n    }\n\n    render() {\n      return (\n        <ReactRelayContext.Provider\n          value={{ environment: this.environment, variables: {} }}\n        >\n          <ComposedComponent {...this.props} query={this.props} />\n        </ReactRelayContext.Provider>\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}